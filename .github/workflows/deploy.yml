name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to EC2
      run: |
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Add EC2 to known hosts to avoid host verification
        ssh-keyscan 3.101.105.213 >> ~/.ssh/known_hosts
        
        # Deploy to EC2
        ssh -i ~/.ssh/deploy_key ec2-user@3.101.105.213 << 'EOF'
        set -e
        echo "Starting deployment..."
        
        # Clone repo if it doesn't exist
        if [ ! -d "decij" ]; then
          echo "Cloning repository..."
          git clone https://github.com/ralphramosgit/decij.git decij
        fi
        
        # Navigate and update
        echo "Updating code..."
        cd decij
        git fetch origin
        git reset --hard origin/main
        
        # Stop existing container
        echo "Stopping existing container..."
        docker stop decij-backend 2>/dev/null || echo "No container to stop"
        docker rm decij-backend 2>/dev/null || echo "No container to remove"
        
        # Build new image
        echo "Building Docker image..."
        docker build -t decij-backend .
        
        # Run new container
        echo "Starting new container..."
        docker run -d --name decij-backend -p 5000:5000 \
          -e GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
          decij-backend
        
        # Verify deployment
        echo "Verifying deployment..."
        sleep 5
        docker ps | grep decij-backend
        echo "Deployment complete!"
        EOF